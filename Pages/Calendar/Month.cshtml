@page
@model ShiftManager.Pages.Calendar.MonthModel
@using Microsoft.Extensions.Localization
@using ShiftManager.Resources
@inject IStringLocalizer<SharedResources> Localizer
@{
    Layout = "_Layout";
    var weeks = Model.Weeks;
}
<div class="calendar-header">
    <div class="header-main">
        <h2>@Model.CurrentMonth.ToString("MMMM yyyy")</h2>
        @if (User.IsInRole("Owner") || User.IsInRole("Manager") || User.IsInRole("Director"))
        {
            <div class="calendar-help">
                <div class="help-item">
                    <span class="help-icon">üéØ</span>
                    <span>@Localizer["ClickShiftBadges"]</span>
                </div>
                <div class="help-item">
                    <span class="help-icon">‚ö°</span>
                    <span>@Localizer["UseButtonsToAdjust"]</span>
                </div>
            </div>
        }
        else
        {
            <div class="calendar-help">
                <div class="help-item">
                    <span class="help-icon">üëÄ</span>
                    <span>@Localizer["ViewAssignedShifts"]</span>
                </div>
            </div>
        }
    </div>
    <div class="calendar-nav">
        <a class="btn btn-ghost" href="/Calendar/Month?year=@Model.Previous.MonthYear.Year&month=@Model.Previous.MonthYear.Month">
            <span class="nav-icon">‚Üê</span>
            <span class="nav-text">@Model.Previous.Label</span>
        </a>
        <a class="btn btn-primary" href="/Calendar/Month">
            <span class="nav-icon">üìÖ</span>
            <span class="nav-text">@Localizer["Today"]</span>
        </a>
        <a class="btn btn-ghost" href="/Calendar/Month?year=@Model.Next.MonthYear.Year&month=@Model.Next.MonthYear.Month">
            <span class="nav-text">@Model.Next.Label</span>
            <span class="nav-icon">‚Üí</span>
        </a>
    </div>
</div>

<div class="calendar-view-switcher">
    <a class="btn btn-primary" href="/Calendar/Month">@Localizer["Month"]</a>
    <a class="btn btn-ghost" href="/Calendar/Week">@Localizer["Week"]</a>
    <a class="btn btn-ghost" href="/Calendar/Day">@Localizer["Day"]</a>
</div>

<div class="calendar-grid">
    <!-- Weekday headers -->
    <div class="calendar-weekdays">
        <div class="weekday-header">@Localizer["Mon"]</div>
        <div class="weekday-header">@Localizer["Tue"]</div>
        <div class="weekday-header">@Localizer["Wed"]</div>
        <div class="weekday-header">@Localizer["Thu"]</div>
        <div class="weekday-header">@Localizer["Fri"]</div>
        <div class="weekday-header">@Localizer["Sat"]</div>
        <div class="weekday-header">@Localizer["Sun"]</div>
    </div>

    @foreach (var w in weeks)
    {
        foreach (var day in w)
        {
            var isCurrentMonth = day.Date.Month == Model.CurrentMonth.Month;
            var cellClass = isCurrentMonth ? "calendar-cell" : "calendar-cell other-month";

            <div class="@cellClass">
                <div class="cell-date">@day.Date.Day</div>
                @foreach (var l in day.Lines)
                {
                    if (l.Required > 0 || l.Assigned > 0) // Only show shifts that have activity
                    {
                        var badgeClass = l.Assigned >= l.Required ? "ok" : "warn";
                        <div class="shift-line">
                            <div class="assignment-tooltip">
                                @if (User.IsInRole("Owner") || User.IsInRole("Manager") || User.IsInRole("Director"))
                                {
                                    <a href="/Assignments/Manage?date=@day.Date.ToString("yyyy-MM-dd")&shiftTypeId=@l.ShiftTypeId&returnUrl=@Uri.EscapeDataString("/Calendar/Month?year=" + Model.CurrentMonth.Year + "&month=" + Model.CurrentMonth.Month)">
                                        <span class="shift-badge @l.ShiftTypeKey">@Localizer[$"ShiftType_{l.ShiftTypeKey.ToUpper()}"].Value.Substring(0, Math.Min(3, Localizer[$"ShiftType_{l.ShiftTypeKey.ToUpper()}"].Value.Length))</span>
                                    </a>
                                }
                                else
                                {
                                    <span class="shift-badge @l.ShiftTypeKey employee-badge">@Localizer[$"ShiftType_{l.ShiftTypeKey.ToUpper()}"].Value.Substring(0, Math.Min(3, Localizer[$"ShiftType_{l.ShiftTypeKey.ToUpper()}"].Value.Length))</span>
                                }
                                <div class="tooltip-content">
                                    <div class="tooltip-header">
                                        <div class="tooltip-title">
                                            @if (!string.IsNullOrEmpty(l.ShiftName))
                                            {
                                                @l.ShiftName
                                                <span class="tooltip-custom-name">(@Localizer[$"ShiftType_{l.ShiftTypeKey.ToUpper()}"])</span>
                                            }
                                            else
                                            {
                                                @Localizer[$"ShiftType_{l.ShiftTypeKey.ToUpper()}"]
                                            }
                                        </div>
                                        <div class="tooltip-hours">@l.StartTime - @l.EndTime</div>
                                    </div>

                                    <div class="tooltip-section">
                                        <div class="tooltip-section-title">@Localizer["Staffing"]</div>
                                        <div class="tooltip-names">
                                            @if (l.AssignedNames.Any())
                                            {
                                                @foreach (var name in l.AssignedNames)
                                                {
                                                    <span class="tooltip-name @l.ShiftTypeKey">@name</span>
                                                }
                                            }
                                            @if (l.EmptySlots.Any())
                                            {
                                                @foreach (var empty in l.EmptySlots)
                                                {
                                                    <span class="tooltip-empty">@empty</span>
                                                }
                                            }
                                            @if (!l.AssignedNames.Any() && !l.EmptySlots.Any())
                                            {
                                                <span class="tooltip-empty">@Localizer["NoStaffingRequired"]</span>
                                            }
                                        </div>
                                    </div>

                                    @if (l.TraineeNames.Any())
                                    {
                                        <div class="tooltip-section">
                                            <div class="tooltip-section-title">Trainees</div>
                                            <div class="tooltip-names">
                                                @foreach (var traineeName in l.TraineeNames)
                                                {
                                                    <span class="tooltip-name" style="background-color: #3b82f6; color: white;">üë§ @traineeName</span>
                                                }
                                            </div>
                                        </div>
                                    }

                                    <div class="tooltip-stats">
                                        <span class="tooltip-stat">
                                            @l.Assigned/@l.Required @Localizer["Staffed"]
                                            @if (l.TraineeCount > 0)
                                            {
                                                <span style="margin-left: 0.5rem; padding: 0.125rem 0.375rem; background-color: var(--info); color: var(--info-text); border-radius: 0.25rem; font-size: 0.75rem;">
                                                    +@l.TraineeCount üë§
                                                </span>
                                            }
                                        </span>
                                        @if (l.Assigned >= l.Required)
                                        {
                                            <span class="tooltip-status-ok">@Localizer["FullyStaffed"]</span>
                                        }
                                        else
                                        {
                                            <span class="tooltip-status-warn">@string.Format(Localizer["NeedsMore"], l.Required - l.Assigned)</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            @if (User.IsInRole("Owner") || User.IsInRole("Manager") || User.IsInRole("Director"))
                            {
                                <div class="shift-counter" data-si="@l.InstanceId" data-conc="@l.Concurrency">
                                    <button class="counter-btn" aria-label="@Localizer["DecreaseStaffing"]"
                                        onclick="window.adjustStaffing('@Url.Page("Month", "Adjust")', { date: '@day.Date.ToString("yyyy-MM-dd")', shiftTypeId:@l.ShiftTypeId, delta:-1, concurrency:@l.Concurrency }, (d)=>{ this.parentElement.dataset.conc=d.concurrency; this.parentElement.nextElementSibling.innerText = d.assigned + '/' + d.required; }, (e)=>alert(e.message))">‚àí</button>
                                    <button class="counter-btn" aria-label="@Localizer["IncreaseStaffing"]"
                                        onclick="window.adjustStaffing('@Url.Page("Month", "Adjust")', { date: '@day.Date.ToString("yyyy-MM-dd")', shiftTypeId:@l.ShiftTypeId, delta:1, concurrency:@l.Concurrency }, (d)=>{ this.parentElement.dataset.conc=d.concurrency; this.parentElement.nextElementSibling.innerText = d.assigned + '/' + d.required; }, (e)=>alert(e.message))">+</button>
                                </div>
                            }
                            <span class="staffing-badge @badgeClass">@l.Assigned/@l.Required</span>
                        </div>
                        @if (!string.IsNullOrEmpty(l.ShiftName))
                        {
                            <div class="shift-display-name">
                                @l.ShortName.ToLower()-'@l.ShiftName'
                            </div>
                        }
                    }
                }
                @if (isCurrentMonth && (User.IsInRole("Owner") || User.IsInRole("Manager") || User.IsInRole("Director")))
                {
                    <button class="add-shift-btn" onclick="openShiftModal('@day.Date.ToString("yyyy-MM-dd")')">
                        <span>+</span>
                        <span>@Localizer["AddShift"]</span>
                    </button>
                }
            </div>
        }
    }
</div>

<script>
window.shiftTypes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewData["ShiftTypes"]));
window.companies = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewData["Companies"]));
</script>
