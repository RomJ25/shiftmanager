@page
@model ShiftManager.Pages.Admin.CompaniesModel
@using Microsoft.Extensions.Localization
@using ShiftManager.Resources
@inject IStringLocalizer<SharedResources> Localizer
@{
    Layout = "_Layout";
}
<h2>@Localizer["Companies"]</h2>

@if (!string.IsNullOrEmpty(Model.Success))
{
    <div class="alert alert-success" style="margin-bottom: 2rem; padding: 1rem; background: var(--success); color: white; border-radius: 0.5rem;">
        @Model.Success
    </div>
}

<div class="card">
    <h3 style="margin-top:0">@Localizer["AddNewCompany"]</h3>
    @if (!string.IsNullOrEmpty(Model.Error)) { <div class="small" style="color:var(--danger); margin-bottom: 1rem;">@Model.Error</div> }

    <form method="post" asp-page-handler="AddCompany">
        <fieldset style="border: 1px solid var(--border); padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem;">
            <legend style="padding: 0 0.5rem; font-weight: 600;">@Localizer["CompanyDetails"]</legend>
            <div style="display:grid; grid-template-columns: 1fr 1fr 1fr; gap:.5rem; align-items:end">
                <label>
                    @Localizer["CompanyName"] *<br />
                    <input class="input" asp-for="CompanyName" placeholder="My Company Inc." required />
                </label>
                <label>
                    @Localizer["Slug"] * <small style="color: var(--muted)">(lowercase, letters, numbers, hyphens)</small><br />
                    <input class="input" asp-for="CompanySlug" placeholder="my-company" pattern="[a-z0-9-]+" required />
                </label>
                <label>
                    @Localizer["DisplayName"]<br />
                    <input class="input" asp-for="CompanyDisplayName" placeholder="My Company" />
                </label>
            </div>
        </fieldset>

        <fieldset style="border: 1px solid var(--border); padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem;">
            <legend style="padding: 0 0.5rem; font-weight: 600; color: var(--text);">@Localizer["OrAssignExistingDirector"]</legend>
            <div style="display:grid; grid-template-columns: 1fr; gap:.5rem;">
                <label>
                    @Localizer["ExistingDirector"]<br />
                    <select class="input" asp-for="SelectedDirectorId" id="directorSelect">
                        <option value="">@Localizer["SelectExistingDirector"]</option>
                        @foreach (var director in Model.AvailableDirectors)
                        {
                            <option value="@director.Id">@director.DisplayName (@director.Email)</option>
                        }
                    </select>
                </label>
                <small style="color: var(--muted);">
                    @Localizer["IfDirectorSelected"]
                </small>
            </div>
        </fieldset>

        <fieldset style="border: 1px solid var(--border); padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem;" id="managerFieldset">
            <legend style="padding: 0 0.5rem; font-weight: 600;">@Localizer["ManagerAccount"]</legend>
            <div style="display:grid; grid-template-columns: 1fr 1fr 1fr; gap:.5rem; align-items:end">
                <label>
                    @Localizer["ManagerEmail"] <span id="managerEmailRequired">*</span><br />
                    <input class="input" asp-for="ManagerEmail" type="email" placeholder="manager@company.com" id="managerEmail" />
                </label>
                <label>
                    @Localizer["ManagerDisplayName"] <span id="managerDisplayRequired">*</span><br />
                    <input class="input" asp-for="ManagerDisplayName" placeholder="John Doe" id="managerDisplayName" />
                </label>
                <label>
                    @Localizer["ManagerPassword"] <span id="managerPasswordRequired">*</span><br />
                    <input class="input" asp-for="ManagerPassword" type="password" placeholder="••••••••" id="managerPassword" />
                </label>
            </div>
        </fieldset>

        <button class="btn btn-primary" type="submit">@Localizer["CreateCompanyManager"]</button>
    </form>

    <div style="margin-top: 1rem; padding: 1rem; background: var(--surface); border-left: 4px solid var(--primary); border-radius: 0.5rem;">
        <small style="color: var(--muted);">
            <strong>@Localizer["Note"]:</strong> @Localizer["CreatingCompanyWill"]
            <ul style="margin: 0.5rem 0; padding-left: 1.5rem;">
                <li>@Localizer["CreateCompanyWithDetails"]</li>
                <li>@Localizer["CreateManagerAccount"]</li>
                <li>@Localizer["GenerateDefaultShiftTypes"]</li>
                <li>@Localizer["SetupDefaultConfig"]</li>
            </ul>
        </small>
    </div>
</div>

<div class="card">
    <h3 style="margin-top:0">@Localizer["AllCompanies"]</h3>
    <table>
        <thead>
            <tr>
                <th>@Localizer["Name"]</th>
                <th>@Localizer["Slug"]</th>
                <th>@Localizer["DisplayName"]</th>
                <th>@Localizer["Users"]</th>
                <th style="width:1%">@Localizer["Actions"]</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var c in Model.Companies)
        {
            <tr>
                <td>@c.Name</td>
                <td><code>@c.Slug</code></td>
                <td>@(c.DisplayName ?? "-")</td>
                <td>@c.UserCount</td>
                <td>
                    <div style="display: flex; gap: 0.5rem; white-space: nowrap;">
                        <!-- Rename Button -->
                        <button type="button" class="btn btn-ghost" style="font-size: 0.8rem; padding: 0.3rem 0.6rem;"
                                onclick="renameCompany(@c.Id, '@c.Name')">
                            @Localizer["Rename"]
                        </button>

                        <!-- Delete Form -->
                        <form method="post" asp-page-handler="DeleteCompany" style="display:inline"
                              onsubmit="return confirm('@Localizer["ConfirmDeleteCompany"]');">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@c.Id" />
                            <button type="submit" class="btn btn-danger" style="font-size: 0.8rem; padding: 0.3rem 0.6rem;">
                                @Localizer["Delete"]
                            </button>
                        </form>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>

    @if (!Model.Companies.Any())
    {
        <p style="text-align: center; color: var(--muted); padding: 2rem;">
            @Localizer["NoCompaniesYet"]
        </p>
    }
</div>

<!-- Rename Company Modal/Form (Hidden by default) -->
<div id="renameModal" style="display:none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; align-items: center; justify-content: center;">
    <div class="card" style="max-width: 500px; margin: auto; margin-top: 10rem;">
        <h3 style="margin-top:0">@Localizer["RenameCompany"]</h3>
        <form method="post" asp-page-handler="RenameCompany">
            @Html.AntiForgeryToken()
            <input type="hidden" id="renameCompanyId" name="RenameCompanyId" />
            <label>
                @Localizer["NewCompanyName"]<br />
                <input type="text" class="input" id="newCompanyName" name="NewCompanyName" required />
            </label>
            <div style="display: flex; gap: 0.5rem; margin-top: 1rem;">
                <button type="submit" class="btn btn-primary">@Localizer["Rename"]</button>
                <button type="button" class="btn btn-ghost" onclick="closeRenameModal()">@Localizer["Cancel"]</button>
            </div>
        </form>
    </div>
</div>

<script>
function renameCompany(id, currentName) {
    document.getElementById('renameCompanyId').value = id;
    document.getElementById('newCompanyName').value = currentName;
    document.getElementById('renameModal').style.display = 'flex';
}

function closeRenameModal() {
    document.getElementById('renameModal').style.display = 'none';
}

// Close modal when clicking outside
document.getElementById('renameModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeRenameModal();
    }
});

// Toggle manager fields based on director selection
document.addEventListener('DOMContentLoaded', function() {
    const directorSelect = document.getElementById('directorSelect');
    const managerEmail = document.getElementById('managerEmail');
    const managerDisplayName = document.getElementById('managerDisplayName');
    const managerPassword = document.getElementById('managerPassword');
    const managerFieldset = document.getElementById('managerFieldset');

    function toggleManagerFields() {
        const directorSelected = directorSelect.value && directorSelect.value !== '';

        if (directorSelected) {
            // Director selected - make manager fields optional and dim them
            managerEmail.removeAttribute('required');
            managerDisplayName.removeAttribute('required');
            managerPassword.removeAttribute('required');
            managerFieldset.style.opacity = '0.5';
            document.getElementById('managerEmailRequired').style.display = 'none';
            document.getElementById('managerDisplayRequired').style.display = 'none';
            document.getElementById('managerPasswordRequired').style.display = 'none';
        } else {
            // No director - make manager fields required and normal
            managerEmail.setAttribute('required', 'required');
            managerDisplayName.setAttribute('required', 'required');
            managerPassword.setAttribute('required', 'required');
            managerFieldset.style.opacity = '1';
            document.getElementById('managerEmailRequired').style.display = 'inline';
            document.getElementById('managerDisplayRequired').style.display = 'inline';
            document.getElementById('managerPasswordRequired').style.display = 'inline';
        }
    }

    directorSelect.addEventListener('change', toggleManagerFields);
    toggleManagerFields(); // Initial state
});
</script>
