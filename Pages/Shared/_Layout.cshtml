@using System.Security.Claims
@using Microsoft.Extensions.Localization
@using ShiftManager.Resources
@using System.Globalization
@using ShiftManager.Services
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IStringLocalizer<SharedResources> Localizer
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@inject IViewAsModeService ViewAsModeService
@{
    var user = HttpContextAccessor?.HttpContext?.User;
    var name = user?.FindFirst(ClaimTypes.Name)?.Value ?? "";
    var role = user?.FindFirst(ClaimTypes.Role)?.Value ?? "";
    var isAdmin = User.IsInRole("Owner") || User.IsInRole("Manager") || User.IsInRole("Director");
    var isDirector = User.IsInRole("Owner") || User.IsInRole("Director");
    var firstName = name.Split(' ').FirstOrDefault() ?? name;
    var currentCulture = CultureInfo.CurrentUICulture.Name;
    var isHebrew = currentCulture.StartsWith("he");
    var direction = isHebrew ? "rtl" : "ltr";
    var lang = isHebrew ? "he" : "en";
    var enableCompanySwitcher = Configuration.GetValue<bool>("Features:EnableCompanySwitcher", false);
    var isViewingAsManager = ViewAsModeService.IsViewingAsManager();
    var viewAsCompanyName = isViewingAsManager ? ViewAsModeService.GetViewAsCompanyNameAsync().Result : null;
}
<!DOCTYPE html>
<html lang="@lang" dir="@direction" data-theme="light" class="@(isHebrew ? "hebrew" : "english")">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@(isAdmin ? Localizer["ShiftManager"] : $"{Localizer["MySchedule"]} - {firstName}")</title>
    <link rel="stylesheet" href="~/css/site.css" />
    @if (isHebrew)
    {
        <link rel="stylesheet" href="~/css/rtl.css" />
    }
    <script defer src="~/js/site.js"></script>
    @if (isHebrew)
    {
        <script defer src="~/js/hebrew-audit.js"></script>
    }
</head>
<body>
<header class="@(isAdmin ? "topbar" : "topbar employee-topbar")">
    <div class="brand">
        @if (isAdmin)
        {
            <span>@Localizer["ShiftManager"]</span>
        }
        else
        {
            <div class="employee-brand">
                <span class="brand-icon">üìÖ</span>
                <div class="brand-text">
                    <div class="brand-title">@Localizer["MySchedule"]</div>
                    <div class="brand-subtitle">@Localizer["WelcomeBack", firstName]</div>
                </div>
            </div>
        }
    </div>

    <nav class="nav @(isAdmin ? "" : "employee-nav")">
        @if (isAdmin)
        {
            <div class="dropdown">
                <button class="linklike">@Localizer["Calendar"] ‚ñæ</button>
                <div class="menu">
                    <a href="/Calendar/Month">@Localizer["MonthView"]</a>
                    <a href="/Calendar/Week">@Localizer["WeekView"]</a>
                    <a href="/Calendar/Day">@Localizer["DayView"]</a>
                </div>
            </div>
            <a href="/Requests/Index">@Localizer["Requests"]</a>
            <a href="/My/Index">@Localizer["MyShifts"]</a>
            @if (isDirector)
            {
                <div class="dropdown">
                    <button class="linklike">@Localizer["Director"] ‚ñæ</button>
                    <div class="menu">
                        <a href="/Director/NotificationHub">@Localizer["NotificationHub"]</a>
                        <a href="/Director/CompanyFilter">@Localizer["CompanyFilter"]</a>
                        <a href="/Director/ViewAsMode">@Localizer["ViewAsManager"]</a>
                    </div>
                </div>
            }
            <div class="dropdown">
                <button class="linklike">@Localizer["Admin"] ‚ñæ</button>
                <div class="menu">
                    @if (User.IsInRole("Owner"))
                    {
                        <a href="/Admin/Companies">@Localizer["Companies"]</a>
                        <a href="/Admin/Directors">@Localizer["Directors"]</a>
                        <a href="/Diagnostic">üîß @Localizer["Diagnostic"]</a>
                    }
                    <a href="/Admin/Users">@Localizer["Users"]</a>
                    <a href="/Admin/ShiftTypes">@Localizer["ShiftTypes"]</a>
                    <a href="/Admin/TimeOff">@Localizer["TimeOffManagement"]</a>
                    <a href="/Admin/Config">@Localizer["Config"]</a>
                </div>
            </div>
        }
        else
        {
            <a href="/My/Index" class="nav-item primary">
                <span class="nav-icon">üè†</span>
                <span class="nav-text">@Localizer["MyShifts"]</span>
            </a>
            <a href="/Calendar/Month" class="nav-item">
                <span class="nav-icon">üìÖ</span>
                <span class="nav-text">@Localizer["Schedule"]</span>
            </a>
            <a href="/My/Requests" class="nav-item">
                <span class="nav-icon">üìù</span>
                <span class="nav-text">@Localizer["Requests"]</span>
            </a>
            <a href="/My/NotificationCenter" class="nav-item notification-nav" style="position: relative;">
                <span class="nav-icon">üîî</span>
                <span class="nav-text">@Localizer["Notifications"]</span>
                @await Component.InvokeAsync("UnreadNotificationCount")
            </a>
        }
    </nav>

    <div class="spacer"></div>

    <div class="topbar-actions">
        @* Multitenancy Phase 3: Company switcher (behind feature flag) *@
        @if (enableCompanySwitcher && isAdmin)
        {
            <div class="company-switcher" style="display: none;">
                @* TODO Phase 3: Implement company switcher dropdown *@
                <button class="action-btn" aria-label="Switch Company">
                    <span>üè¢</span>
                </button>
            </div>
        }

        @await Component.InvokeAsync("LanguageToggle")

        <button class="action-btn" id="themeToggle" aria-label="@Localizer["ToggleDarkMode"]">
            <span class="theme-icon">üåì</span>
        </button>

        @if (User?.Identity?.IsAuthenticated == true)
        {
            <div class="user-menu">
                @if (!isAdmin)
                {
                    <div class="user-info">
                        <div class="user-avatar">@firstName.Substring(0, 1).ToUpper()</div>
                        <div class="user-details">
                            <div class="user-name">@name</div>
                            <div class="user-role">@role</div>
                        </div>
                    </div>
                }
                else
                {
                    <span class="admin-badge">@name (@role)</span>
                }
                <form method="post" asp-page="/Auth/Logout" style="display:inline">
                    @Html.AntiForgeryToken()
                    <button class="logout-btn" type="submit">
                        <span class="logout-icon">üö™</span>
                        <span class="logout-text">@Localizer["Logout"]</span>
                    </button>
                </form>
            </div>
        }
    </div>
</header>

@if (isViewingAsManager && viewAsCompanyName != null)
{
    <div style="background: var(--warning); color: #000; padding: 0.75rem 1rem; text-align: center; font-weight: 600; border-bottom: 2px solid #d97706;">
        ‚ö†Ô∏è Viewing as Manager of <strong>@viewAsCompanyName</strong> ‚Äî
        <a href="/Director/ViewAsMode" style="color: #000; text-decoration: underline; margin-left: 1rem;">Exit View Mode</a>
    </div>
}

@if (!isAdmin)
{
    <div class="employee-welcome">
        <div class="container">
            <div class="welcome-content">
                <h1 class="welcome-title">@Localizer[DateTime.Now.Hour < 12 ? "GoodMorning" : DateTime.Now.Hour < 18 ? "GoodAfternoon" : "GoodEvening", firstName]</h1>
                <p class="welcome-subtitle">@Localizer["ScheduleSubtitle"]</p>
            </div>
            <div class="quick-stats">
                <!-- Quick stats will be populated by individual pages -->
            </div>
        </div>
    </div>
}

<main class="@(isAdmin ? "container" : "container employee-container")">
    @RenderBody()
</main>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
